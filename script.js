// / 11. Вам дан массив [NaN, 0, 77, false, -17, '',undefined, 99, null]. Создайте функцию, которая очищает
// массив от ложных (false) значений: false, null, undefined, 0, –0, NaN и "" (пустая строка).
// const task = (arr) => {
//   return arr.filter((el) => el);
// };
// console.log(task(NaN, 0, 77, false, -17, "", undefined, 99, null));
// 12. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Выведите длину каждой строки.

// sort

// let arr = [1, 2, 3, 4, 5, 6, 7, 8, 88];
// console.log(arr.sort((a, b) => a - b));

// reduce

// const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
// console.log(
//   arr.filter((el, index, array) => {
//     return el > 10;
//   })
// );

// 1. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму этих чисел.

// const arr = (a) => {
//   return a.reduce((acc, el) => {
//     return acc + el;
//   }, 0);
// };
// console.log(arr([5, 15, 315, 2, 13, 20, 9]));

// 2. Вам дан массив с числами [5,12,314,2,13,20,9]. Найдите сумму всех четных чисел.
// const arr = (a) => {
//   return a.reduce((acc, el) => {
//     if (el % 2 === 0) {
//       return acc + el;
//     } else {
//       return acc;
//     }
//   });
// };
// console.log([5, 12, 314, 2, 13, 20, 9]);
// 3. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму чисел, которые больше 10.

// 4. Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше 10.
// function task(name) {
//   return name
//     .filter((el) => {
//       return el > 10;
//     })
//     .sort((a, b) => {
//       return b - a;
//     })
//     .reduce((acc, el) => {
//       return acc - el;
//     });
// }

// console.log(task());
// console.log(task([3, 13, 54, 15, 335, 39]));
// 5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат'].
//  Сложите все строки и выведите длину результата.
// let arr = ["Аскар", "Баяман", "Калмамат"];
// console.log(arr.le ngth(2));

// 6. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат'].
//  Выведите все строки в верхнем регистре, используя map.

// 7. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат'].
//  Выведите все вторые строки в верхнем регистре.
// const arr = ["Аскар", "Баяман", "Калмамат"];
//  return arr.
//  console.log( );

// 8. Напишите функцию, которая принимает str, target. И возвращает true или false,
//  если targer присутствует в str. Использовать .reduce для этого.
// Пример: isPresent ('abcd', 'b') => true
// isPresent ('
// let arr = ["Бегимай", "Баяман", "Калмамат"];
// console.log(
//   arr.map((el, idx) => {
//     if (idx % 2 !== 0) {
//       return el.toUpperCase();
//     } else {
//       return el;
//     }
//   })
// );efghi', 'a') // => false

// 9. Вам дан массив с строками ['асКар', 'бЯяман', 'калМмамат'].
// Используйте заглавные буквы в каждом массиве имен.
// Пример: (["john", "JACOB", "jinGleHeimer", "schmidt"])), => ["John", "Jacob", "Jingleheimer", "Schmidt"]

// 10. Вам дан массив со строками ['Баяман', 'Калмамат']. Поменяйте местами первые буквы строк.
// 11. Вам дан массив [true, '1234', 325]. Напишите функцию,
//  которая проверяет, все ли элементы массива относятся к одному типу данных.

// 12. Вам дана строка 'тестинг'. Ваша задача - вернуть средний символ слова.
//  Если длина слова нечетная, верните средний символ. Если длина слова четная, вернуть 2 средних символа.

// 13. Вам дан массив с числами [5, -3, 13, -7, 45]. Верните сумму всех положительных чисел.

// 14. Вам дан массив с числами [5, -54, 13, -7, 45, -15, -34]. Верните сумму
// всех отрицательных чисел, которые больше 10.

// 15. Вам дан массив с числами [1, 65, 13 , 30, 100] - все числа - доллары.
//  Вам нужно обменять эти доллары по курсу сома и вывести все числа в сомах.

// 16. Вам дан массив со строками ['Lorem ipsum dor sit omet devour il ela sit'].
// Выведите каждый нечетный индекс в строке в верхнем регистре.

// 17. Вам дан массив с строками ['Оскар', 'Баяман', 'Калмамат']. Добавьте к каждой строке нумерацию.

// 18. Вам дан массив с числами [2,456,6,8]. Напишите функцию ,
//  которая вставляет дефис (-) между каждыми двумя четными числами. Например,
//  если вы принимаете 025468, на выходе должно быть 0-254-6-8.

// 20. Вам дан массив с числами [5,15,315,2,13,20,9].
//  Посчитайте среднее арифметическое чисел в массиве.

// Во всех задачах используйте только методы map, filter.

// 1. Вам дан массив: [315, 64, 75, 43, 65, 63].Найдите сумму каждого числа.

// 2. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию,
// изменяющую букву а в каждом имени на я и выведите в консоль.

// 3. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию,
// которая выводит только те имена, где есть буква к и выведите в консоль.

// 4. Вам дан массив: [4, 54, 49]. Сделайте из него массив, состоящий из квадратов этих чисел.
//
// 5. Вам дан массив [3134, 4, -143, -245, -214]. Оставьте в нем только отрицательные числа.
// let arr = [3134, 4, -143, -245, -214];
// console.log(arr.filter((el) => el < 0));
// 6. Вам дан массив [3, 51, 30, 54, 60]. Оставьте в нем только четные числа.
// let arr = [3, 51, 30, 54, 60];
// console.log(arr.filter((el) => el % 2 === 0));
// 7. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Оставьте в нем только те строки,
//  длина которых больше 5-ти символов.
// let arr = ["Бегимай", "Баяман", "Калмамат"];
// console.log(
//   arr.filter((el) => {
//     return el.length > 6;
//   })
// );
// 8. Вам дан массив [-13, 96, -41, -28, 40]. Посчитайте количество отрицательных чисел в этом массиве.
// let arr = [-13, 96, -41, -28, 40];
// console.log(
//   arr.filter((el) => {
//     return el > 0;
//   }).length
// );
// 9. Вам дан массив [3, 51, -30, -54, 60]. Оставьте в нем только положительные числа.
// Затем извлеките квадратный корень из этих чисел, если эти числа больше 30.
// let arr = [3, 51, -30, -54, 60];
// console.log(arr.filter((el) => el > 30));
// 11. Вам дан массив [NaN, 0, 77, false, -17, '',undefined, 99, null]. Создайте функцию,
// которая очищает массив от ложных (false) значений: false, null, undefined, 0, –0, NaN и "" (пустая строка).
// let arr = [NaN, 0, 77, false, -17, "", undefined, 99, null];
// console.log(arr.filter((el) => el));

// 12. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Выведите длину каждой строки.

// let arr = ["Бегимай", "Баяман", "Калмамат"];
// console.log(
//   arr.map((el, idx) => {
//     if (idx % 2 !== 0) {
//       return el.toUpperCase();
//     } else {
//       return el;
//     }
//   })
// );
// Вам дан массив с строками ['асКар', 'бЯяман', 'калМмамат']. Используйте заглавные буквы в каждом массиве имен.
//    Пример: (["john", "JACOB", "jinGleHeimer", "schmidt"])), => ["John", "Jacob", "Jingleheimer", "Schmidt"]
// let arr = ["асКар", "бЯяман", "калМмамат"];
// let name = arr.map((el) => {
//   return el.slice(0.1).toUpperCase() + el.slice(1).toLocaleLowerCase();
// });
// console.log(name);

// arr = arr.map((el) => {
//   return el.charAt(0).toUpperCase() + el.slice(1).toLowerCase();
// });

// console.log(arr);
// Преобразование данных
// Создайте массив чисел и используйте метод map(), чтобы преобразовать
// числа в строковый формат с добавлением символа "$" в начале каждой строки.
// let prices = [10, 20, 30, 40, 50];
// let arr1 = [10, 20, 30, 40, 50];

// let res = arr.map((el) => "$" + el);

// console.log(res);

// let arr = ["Бегимай"];
// /'''''''''''''''''''''''''''''''''''''''''''''''''///
//1. Поиск элемента в массиве
// Создайте массив чисел и используйте метод find(), чтобы найти первый элемент,
//  который больше  25 определенного порогового значения.
// let arr = [10, 20, 30, 40, 50];
// console.log(arr.find((el) => el === 20));

// 2.Поиск элемента с использованием функции-коллбэка
// Создайте массив строк и используйте метод find(), чтобы найти первую строку,
//  которая начинается с "b" определенной буквы.
// let arr = ["apple", "banana", "cherry", "date"];
// console.log(arr.find((el) => el === ""));
// 3.Поиск элемента по индексу
// Создайте массив чисел и используйте метод find() для нахождения элемента по его индексу 2
// let numbers = [10, 20, 30, 40, 50];

// 4..Преобразование массива в строку
// Создайте массив строк и используйте метод join(), чтобы объединить все элементы массива в
// одну строку с определенным разделителем.
// let arr = ["apple", "banana", "cherry"];
// console.log(arr.join());

// 5.Объединение пути к файлу
// Создайте массив строк, представляющих части пути к файлу, и используйте метод join() для объединения их в один путь.
// let arr = ["folder", "subfolder", "file.txt"];
// console.log(arr.join());

// 6.Преобразование чисел в строку
// Создайте массив чисел и используйте метод join() для преобразования их в строку, разделенную запятой.
// let num = [1, 2, 3, 4, 5];
// console.log(num.join());

// 7.Разделение строки по пробелам
// Разделите строку на массив слов, используя пробел в качестве разделителя.
// let sentence = "Это пример разделения строки на слова";

// 8.Разделение строки по запятой
// Разделите строку, содержащую перечень элементов, разделенных запятыми, на массив элементов.
// let items = "apple, banana, cherry, date";

//9. Сортировка строк в лексикографическом порядке
// Используйте метод sort(), чтобы отсортировать массив строк в лексикографическом порядке (по алфавиту).
// let fruits = ["banana", "apple", "cherry", "date"];

// 10.Сортировка строк в обратном порядке
// Используйте метод sort() и функцию сравнения для отсортировки массива строк в обратном порядке
// let fruits = ["banana", "apple", "cherry", "date"];

// 11.Проверка наличия элемента больше определенного порога
// Используйте метод some(), чтобы проверить, есть ли в массиве хотя бы один элемент больше 15
// let arr = [10, 5, 8, 22, 3];
// console.log(arr.some((el) => el === 5));
//12. Проверка наличия строк, содержащих определенную букву
// Используйте метод some(), чтобы проверить, есть ли в массиве строк хотя бы одна строка, содержащая определенную букву “a”
// let words = ["apple", "banana", "cherry", "date"];

// 13.Проверка наличия элементов, удовлетворяющих условию
// Используйте метод some(), чтобы проверить, есть ли в массиве хотя бы один элемент, удовлетворяющий определенному условию.
// let arr = [10, 5, 8, 22, 3];

// console.log(arr.some((el) => el === 10));

// 14. Объединение элементов массива с определенным разделителем
// Используйте метод reduce() для объединения элементов массива с определенным разделителем.
// let items = ["apple", "banana", "cherry"];

// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//                  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//                     @@@@@@@@@@@@@@@@@@@@@@@@@@@
//                        @@@@@@@@@@@@@@@@@@@@
//                            @@@@@@@@@@@@
//                                @@@@
//                                 @@
// Задание №1
// Дан массив ["dlrow", "olleH"]. Измените его таким образом, чтобы в итоге получилось ["Hello", "world"]. Используйте методы массива.
// let arr = ["dlrow", "olleH"];
// let arr1 = arr.join("").split("").reverse();
// console.log(arr1.join(""));
// Задание №2
// Дан массив ['а', 'б', 'в']. Добавьте ему в конец элементы 4,3,5,5.
// let arr = ["а", "б", "в"];
// arr.push(4, 3, 5, 5);
// console.log(arr);
// Задание №3
// Дан массив ["Apple", "Orange", "Pinapple", "Cherry"]. Удалите сначала первый элемент "Apple" и этот же элемент подставтье после "Pineapple".

// let fruit = ["Apple", "Orange", "Pinapple", "Cherry"];
// fruit.shift();
// fruit.shift(2, 0, "Apple");
// console.log(fruit);

// Вам дана функция checkTask, принимающая массив arr с числами, выведите в консоль массив, в котором будут только положительные числа из массива arr.
// checkTask([2, 3, 5, 9, 8, -11, 6, 7, 47, 53, -1, -3, 17])
//  [2, 3, 5, 9, 8, 6, 7, 47, 53, 17]
// function task(a) {
//   return a.filter((el) => el > 0);
// }
// console.log(task([2, 3, 5, 9, 8, -11, 6, 7, 47, 53, -1, -3, 17]));
// Вам дана функция checkTask, принимающая массив arr с числами. Используя метод reduce(), вычтите числа в массиве начиная с начала и выведите в консоль результат.
// Например:
// checkTask( [175, 50, 25])
// Вывод:
// 100
// function task(arr) {
//   return arr.reduce((acc, el) => acc - el);
// }
// console.log(task([175, 50, 25]));

// Напишите функцию palindrom(word), принимающая один аргумент word.
// Функция, должна выводить в консоль true, если строка является палиндромом, в обратном случае false. При этом нужно учитывать пробелы и регистр.
// Палиндром – слово, которое читается одинаково слева направо и справа налево (например, ротор)

// Пример №1:
// Ввод: tenet
// Ответ: true

// Пример №2:
// Ввод: my gym
// Ответ: true

// Пример №3Ж
// Ввод: nolan
// Вывод: false

// Объединение элементов массива с определенным разделителем
// Используйте метод reduce() для объединения элементов массива с определенным разделителем.
// let items = ["apple", "banana", "cherry"];

// 1. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму этих чисел.
// let arr = [5, 15, 315, 2, 13, 20, 9];
// let arr1 = arr.reduce((acc, el) => acc + el);
// console.log(arr1);

// 2. Вам дан массив с числами [5,12,314,2,13,20,9]. Найдите сумму всех четных чисел.
// let arr = [5, 12, 314, 2, 13, 20, 9];

// let arr1 = arr.filter((el) => el % 2 === 0).reduce((acc, el) => acc + el);
// console.log(arr1);

// 3. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму чисел, которые больше 10.
// let arr = [5, 15, 315, 2, 13, 20, 9];

// let arr1 = arr.filter((el) => el > 10).reduce((acc, el) => acc + el);
// console.log(arr1);

// 4. Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше 10.
// let arr = [3, 13, 54, 15, 335, 39];

// console.log(
//   arr
//     .filter((el) => el > 10)
//     .sort((a, b) => b - a)
//     .reduce((acc, el) => acc + el)
// );
// 5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Сложите все строки и выведите длину результата.
// let arr = ["Аскар", "Баяман", "Калмамат"];
// console.log(arr.join("").length);

// let arr = "#";
// console.log(arr);

// let arr1 = "##";
// console.log(arr1);

// let arr3 = "###";
// console.log(arr3);

// let arr4 = "####";
// console.log(arr4);

// let arr5 = "#####";
// console.log(arr5);
// let arr6 = "######";
// console.log(arr6);

// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// function flickSwitch(arr) {
//     let result = true
//   return arr.map(el=> )
// }
// console.log(flickSwitch(["codewars", "flick", "code", "wars"]));

// #
// ##
// ###
// ####
// #####
// ######
// #######

// let num = 20;
// console.log(num % 2);
// if (num % 2 === 1) {
//   console.log(Четное);
// }

// let user = [
//   {
//     id: 1,
//     name: "Ilgiz",
//     age: 15,
//     job: "Developer",
//   },
//   {
//     id: 2,
//     name: "Aziret",
//     age: 18,
//     job: "Developer",
//   },
//   {
//     id: 3,
//     name: "Ainura",
//     age: 28,
//     job: "Developer",
//   },
//   {
//     id: 4,
//     name: "Makmal",
//     age: 19,
//     job: "Developer",
//   },
//   {
//     id: 5,
//     name: "Daniel",
//     age: 16,
//     job: "Developer",
//   },
//   {
//     id: 6,
//     name: "Dastan",
//     age: 18,
//     job: "Developer",
//   },
//   {
//     id: 7,
//     name: "Elzar",
//     age: 15,
//     job: "Developer",
//   },
// ];
// console.log(user.map((el) => el.name));
// console.log(user.filter((el) => el.age >= 18));
// console.log(
//   user.map((el, idx) => {
//     if (idx % 2 !== 0) {
//       el.hobby = "sport";
//       return el;
//     } else {
//       return el;
//     }
//   })
// );
// console.log(
//   user.map((el) => {
//     if (el.id === 6) {
//       el.name = "almaz";
//       return el;
//     } else {
//       return el;
//     }
//   })
// );

// console.log(
//   user.map((el) => {
//     if (el.id === 6) {
//       el.name = "almaz";
//       return el;
//     } else {
//       return el;
//     }
//   })
// );

// let arr = [];
// for (i = 0; i < 6; i++) {
//   arr.push("#");
//   console.log(arr);
// }
// let arr = [1, 4, 5, 6];
// let result = 1;
// for (let i = 0; i < arr.length; i++) {
//   result = result * arr[i];
// }
// console.log(result);

// $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$]
// ###############################%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%^^^^^^^^^^^^^^^^^^^^
// function addLength(str) {
//   return str.split("  ").map((el) => el + " " + el.length);
// }
// console.log(addLength("you will win"));
//

// @@@@@@@@@@@@
// function arrayPlusArray(arr1, arr2) {
//   return arr1 + arr2;
// }
// console.log(arrayPlusArray("something went wrong"));
